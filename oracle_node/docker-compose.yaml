version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: chainlink-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "5432:5432"

  chainlink:
    image: smartcontract/chainlink:2.28.0
    container_name: chainlink-node
    platform: linux/amd64
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./chainlink-data:/chainlink
    command:
      [
        "node",
        "-config", "/chainlink/config.toml",
        "-secrets", "/chainlink/secrets.toml",
        "start",
        "-a", "/chainlink/.api",
        "-p", "/chainlink/.password"
      ]
    ports:
      - "6688:6688"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    user: "0"
    security_opt:
      - "no-new-privileges:true"
    environment:
      # Optional â€” this ensures Chainlink can connect to DB using env var
      DATABASE_URL: ${DATABASE_URL}

volumes:
  postgres_data:
