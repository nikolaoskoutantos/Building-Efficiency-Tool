version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: chainlink-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "5432:5432"  # optional
    env_file:
      - .env
    # logging:
    #  driver: "loki"
    #  options:
    #    loki-url: "${LOKI_URL}"
    #    loki-basic-auth-username: "${LOKI_USERNAME}"
    #    loki-basic-auth-password: "${LOKI_PASSWORD}"
    #    loki-external-labels: "service=postgres"

  chainlink:
    image: smartcontract/chainlink:2.28.0
    container_name: chainlink-node
    platform: linux/amd64
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./chainlink-data:/chainlink   # contains: config.toml, secrets.toml, .api, .password
    command:
      [
        "node",
        "-config", "/chainlink/config.toml",
        "-secrets", "/chainlink/secrets.toml",
        "start",
        "-a", "/chainlink/.api",
        "-p", "/chainlink/.password"
      ]
    ports:
      - "6688:6688"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    user: "0"                          # avoids chmod issues on Windows bind mounts
    security_opt:
      - "no-new-privileges:true"
    env_file:
      - .env
    # logging:
    #  driver: "loki"
    #  options:
    #    loki-url: "${LOKI_URL}"
    #    loki-basic-auth-username: "${LOKI_USERNAME}"
    #    loki-basic-auth-password: "${LOKI_PASSWORD}"
    #    loki-external-labels: "service=chainlink"

volumes:
  postgres_data:
